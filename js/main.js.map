{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://webpack_v2/./src/js/navigation/controllNavigation.js","webpack://webpack_v2/./src/js/navigation/redrawNavigation.js","webpack://webpack_v2/./src/js/slider-head/redrawSlHead.js","webpack://webpack_v2/./src/js/slider-head/controllSlHead.js","webpack://webpack_v2/./src/js/slider-coffee/controllSlСoffee.js","webpack://webpack_v2/./src/js/slider-coffee/redrawSlСoffee.js","webpack://webpack_v2/./src/js/slider-coffee/filter.js","webpack://webpack_v2/./src/js/slider-perspective/controllSlP.js","webpack://webpack_v2/./src/js/slider-perspective/redrawSlP.js","webpack://webpack_v2/./src/js/app.js","webpack://webpack_v2/./src/js/button-to-top/button-to-top.js"],"sourcesContent":["export default class ControllNav {\r\n    constructor(d) {\r\n        this.d = d;\r\n\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    init() {\r\n        this.registerEvents();\r\n        this.d.initNav();\r\n    }\r\n\r\n    registerEvents() {\r\n        this.d.el.addEventListener('click', this.click);\r\n    }\r\n\r\n    click(e) {\r\n        e.preventDefault();\r\n        \r\n        if(e.target.closest('.nav__item')) {\r\n            const el = e.target.closest('.nav__item');\r\n            const flag = el.dataset.item;\r\n            this.d.scrolling(flag);\r\n        }\r\n    }\r\n}","export default class RedrawNav {\r\n    constructor(el) {\r\n        this.el = el;\r\n        this.itemsNav = [...this.el.querySelectorAll('.nav__item')];\r\n        this.itemsPoints = [];\r\n    }\r\n\r\n    initNav() {\r\n        this.itemsNav.forEach(item => {\r\n            const flag = item.dataset.item\r\n            const el = document.querySelector(`.${flag}`);\r\n            this.itemsPoints.push(el);\r\n        })\r\n    }\r\n\r\n    scrolling(flag) {\r\n        const el = this.itemsPoints.find(item => item.matches(`.${flag}`));\r\n\r\n        el.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n            inline: \"nearest\"\r\n        })        \r\n    }\r\n}","export default class RedrawSlHead {\r\n    constructor(slider) {\r\n        this.slider = slider;\r\n        this.slides = this.slider.querySelector('.slider-h__slides-list ')\r\n        this.arrows = [...this.slider.querySelectorAll('.slider__arrow')];\r\n        this.paginations = this.slider.querySelector('.slider-h__pagination-list');\r\n        this.wrLine = this.slider.querySelector('.slider-h__nav-line');\r\n        this.videos = [...this.slider.querySelectorAll('video')];\r\n        this.line = this.wrLine.children[0];\r\n\r\n        this.amountSlides = this.slides.children.length;\r\n        this.widthLine = null; // расчитано во vw\r\n\r\n        // Параметры анимации\r\n        this.timingFunc = 'ease-out';\r\n        this.duration = '0.5';\r\n\r\n        // Счетчик для полосы индикации\r\n        this.lineCounter = 0;\r\n        this.videoCounter = 0;\r\n        this.activeVideo = this.videos[0];\r\n\r\n        // переключение видео по свайпу\r\n        this.touchStart = null;\r\n        this.touchEnd = null;\r\n\r\n        // Блокируем накликивание, работает по события сдвига линии\r\n        this.stoped = null;\r\n\r\n        // прибиваем контекст для controll\r\n        this.initSlider = this.initSlider.bind(this);\r\n    }\r\n\r\n    initSlider() {\r\n        // деактивируем слайдер если слайд один\r\n        if(this.amountSlides === 1) return;\r\n\r\n        this.slides.style.width = `${100 * this.amountSlides}%`\r\n\r\n        // активируем стрелки для десктопа\r\n        if(innerWidth > 961) {\r\n            this.arrows.forEach(item => item.style = 'display: block;');\r\n            this.arrows[0].parentElement.style = 'justify-content: space-between;';\r\n        }\r\n\r\n        // активируем стрелки для десктопа\r\n        if(innerWidth <= 961) {\r\n            this.arrows.forEach(item => item.style = `\r\n                display: block;\r\n                visibility: hidden;\r\n            `);\r\n        }\r\n            \r\n        // активируем линию прокрутки\r\n        const widthLine = this.wrLine.offsetWidth;\r\n        this.widthLine = (widthLine / this.amountSlides) / innerWidth * 100;\r\n        this.line.style = `width: ${this.widthLine}vw;`;\r\n        this.line.style.transition = `transform ${this.duration}s ${this.timingFunc}`;\r\n\r\n        // останавливаем воспроизведение на всех слайдах кроме первого\r\n        this.videos.forEach((v, i) => v.play && i ? v.pause() : '');\r\n\r\n        this.addListenerMovie();\r\n    }\r\n\r\n    \r\n    addListenerMovie() {\r\n        this.videos.forEach(item => {\r\n            item.addEventListener('ended', () => {\r\n                this.moveNext();\r\n            }, false)\r\n        })\r\n    }\r\n\r\n    controllMovie(type) {\r\n        // ставим предидущий слайд на паузу и в начало\r\n        if(this.videos[this.videoCounter].play) {\r\n            this.videos[this.videoCounter].pause();\r\n            this.videos[this.videoCounter].currentTime = 0;\r\n        }\r\n\r\n        if(type === 'next') {\r\n            // прибавляем и проверяем чтоб не получить не существующий индекс\r\n            this.videoCounter += 1;\r\n            this.videoCounter === this.videos.length ? this.videoCounter = 0 : '';\r\n            // запускаем видео на следующем слайде\r\n            if(this.videos[this.videoCounter].paused) {\r\n                this.videos[this.videoCounter].play();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // прибавляем и проверяем чтоб не получить не существующий индекс\r\n        this.videoCounter -= 1;\r\n        this.videoCounter < 0 ? this.videoCounter = this.videos.length - 1 : '';\r\n\r\n        if(this.videos[this.videoCounter].paused) {\r\n            this.videos[this.videoCounter].play();\r\n        }\r\n    }\r\n\r\n    changeVideoWithSwipe() {\r\n        // оба условия так как touchStart и touchEnd могут быть равны\r\n        if(this.touchStart > this.touchEnd) {\r\n            this.arrows[1].click();\r\n            return;\r\n        }\r\n\r\n        if(this.touchStart < this.touchEnd) {\r\n            this.arrows[0].click();\r\n            return;\r\n        }\r\n    }\r\n\r\n    moveNext() {\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        const width = this.slider.offsetWidth;\r\n\r\n        this.slides.style.transform = `translateX(-${width}px)`;\r\n\r\n        this.slides.append(this.slides.children[0]);\r\n        this.slides.style.transform = ``;\r\n\r\n        this.moveLineNext();\r\n        this.controllMovie('next');\r\n    }\r\n\r\n    movePrev() {\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        const width = this.slider.offsetWidth;\r\n        const lastSlideIndex = this.slides.children.length - 1;\r\n        this.slides.prepend(this.slides.children[lastSlideIndex]);\r\n        this.slides.style.transform = `translateX(-${width}px)`;\r\n\r\n        setTimeout(() => { \r\n            this.slides.style.transform = ``;\r\n        })\r\n\r\n        this.moveLinePrev();\r\n        this.controllMovie(null);\r\n    }\r\n\r\n    clickPag(el) {\r\n        if(this.stoped) return;\r\n\r\n        const num = +el.dataset.num;\r\n        if(num === this.lineCounter) return;\r\n\r\n        // двигаем слайды и ползунок в право\r\n        if(num > this.lineCounter) {\r\n            const amount = num - this.lineCounter;\r\n            for(let i = 0; i < amount; i += 1) {\r\n                // разблокируем для двух кликов подряд\r\n                this.stoped = false;\r\n                this.moveNext();\r\n            }\r\n        }\r\n        \r\n        // двигаем слайды и ползунок в лево\r\n        if(num < this.lineCounter) {\r\n            const amount = this.lineCounter - num;\r\n            for(let i = 0; i < amount; i += 1) {\r\n                // разблокируем для двух кликов подряд\r\n                this.stoped = false;\r\n                this.movePrev();\r\n            }\r\n        } \r\n    }\r\n\r\n    moveLineNext() {\r\n        \r\n        this.lineCounter += 1;\r\n\r\n        // открываем возможность следующего клика по окончании анимации\r\n        this.unBlockClick();\r\n        \r\n        // пока слайды не зациклились\r\n        if(this.lineCounter !== this.amountSlides) {\r\n            const offset = this.widthLine * this.lineCounter;\r\n            this.line.style.transform = `translateX(${offset}vw)`;\r\n        }\r\n\r\n        // когда слайды зациклились (повторились сначала)\r\n        if(this.lineCounter === this.amountSlides) {\r\n            // сдвигаем старый ползунок\r\n            const offset = this.widthLine * this.lineCounter;\r\n            this.line.style.transform = `translateX(${offset}vw)`;\r\n\r\n            \r\n            // Создаем новый ползунок, ставим в начало и сдвигаем\r\n            const div = this.createLine();\r\n            this.wrLine.prepend(div);\r\n            const newLine = this.wrLine.children[0];\r\n            newLine.style.transform = `translateX(-${this.widthLine}vw)`;\r\n            setTimeout(() => {\r\n                newLine.style.transform = ``;            \r\n            }, 3) // таймаут отраблатывал слишком быстро поэтому анимация не срабатывала\r\n                 // и событие не происходило, был bag\r\n\r\n            // убираем позиционирование и переопределяем переменную с ползунком\r\n            newLine.addEventListener('transitionend', () => {\r\n                this.wrLine.children[1].remove();\r\n                this.line = newLine;\r\n            }, {once: true})\r\n            this.lineCounter = 0;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    moveLinePrev() {\r\n        this.lineCounter -= 1;\r\n\r\n        // открываем возможность следующего клика по окончании анимации\r\n        this.unBlockClick();\r\n\r\n        // если стартовая позиция крайнее левое положение\r\n        if(this.lineCounter < 0) {\r\n            const offset = this.widthLine * this.lineCounter;\r\n            this.line.style.transform = `translateX(${offset}vw)`;\r\n\r\n            // Создаем новый ползунок, ставим в конец и сдвигаем\r\n            const div = this.createLine();\r\n            this.wrLine.append(div);\r\n            const offsetDiv = this.widthLine * this.amountSlides;\r\n            div.style.transform = `translateX(${offsetDiv}vw)`;\r\n            this.lineCounter = this.amountSlides - 1;\r\n            setTimeout(() => {\r\n                const offset = offsetDiv - this.widthLine;\r\n                div.style.transform = `translateX(${offset}vw)`;\r\n            }, 3)\r\n\r\n            // убираем позиционирование и переопределяем переменную с ползунком\r\n            div.addEventListener('transitionend', () => {\r\n                this.wrLine.children[0].remove();\r\n                this.line = this.wrLine.children[0];\r\n            }, {once: true})\r\n\r\n            return;\r\n        }\r\n\r\n        // если стартовая позиция не крайнее левое положение\r\n        if(this.lineCounter >= 0) {\r\n            const offset = this.widthLine * this.lineCounter;\r\n            this.line.style.transform = `translateX(${offset}vw)`;\r\n        }\r\n    }\r\n\r\n    // Метод для создания ползунка\r\n    createLine() {\r\n        const div = document.createElement('div');\r\n\r\n        div.style.transition = `transform ${this.duration}s ${this.timingFunc}`;\r\n        div.style.width = `${this.widthLine}vw`;\r\n        div.classList.add('slider-h__nav-line-item');\r\n\r\n        return div;\r\n    }\r\n\r\n    unBlockClick() {\r\n        this.line.addEventListener('transitionend', () => {\r\n            this.stoped = false;\r\n        }, {once: true})\r\n    }\r\n}","export default class ControllSlHead {\r\n    constructor(d) {\r\n        this.d = d\r\n        this.slider = d.slider;\r\n        this.initSlider = d.initSlider;\r\n\r\n        this.click = this.click.bind(this);\r\n        this.touchStart = this.touchStart.bind(this);\r\n        this.touchEnd = this.touchEnd.bind(this);\r\n    }\r\n\r\n    init() { \r\n        this.d.initSlider();\r\n        this.d.slider.addEventListener('click', this.click);\r\n        this.d.slider.addEventListener('touchstart', this.touchStart, {passive: true});\r\n        this.d.slider.addEventListener('touchend', this.touchEnd, {passive: true})\r\n    }\r\n\r\n    click(e) { \r\n        // NEXT клик по стрелке\r\n        if(e.target.closest('.slider__arrow-next')) {\r\n           this.d.moveNext();\r\n        }\r\n\r\n        // PREV клик по стрелке\r\n        if(e.target.closest('.slider__arrow-prev')) {\r\n            this.d.movePrev();\r\n        }\r\n\r\n        if(e.target.closest('.slider-h__pagination-item')) {\r\n            this.d.clickPag(e.target.closest('.slider-h__pagination-item'));\r\n        }\r\n    }\r\n\r\n    touchStart(e) {\r\n        this.d.touchStart = e.targetTouches[0].clientX;\r\n    }\r\n\r\n    touchEnd(e) {\r\n        this.d.touchEnd = e.changedTouches[0].clientX;\r\n        this.d.changeVideoWithSwipe();\r\n    }\r\n}","export default class ControllSlСoffee {\r\n    constructor(d, filter) {\r\n        this.d = d;\r\n        this.filter = filter;\r\n\r\n        this.click = this.click.bind(this);\r\n        this.touchMoove = this.touchMoove.bind(this);\r\n        this.touchStart = this.touchStart.bind(this);\r\n        this.touchEnd = this.touchEnd.bind(this);\r\n    }\r\n\r\n    init() {\r\n        this.d.initSlider();\r\n        this.registerEvents();\r\n\r\n        // отрисовка кнопок фильтра\r\n        const data = new Map();\r\n        this.d.data.forEach(item => data.set(item.packing, item['filter-name'],));\r\n        this.filter.rendering(data);\r\n    }\r\n\r\n    registerEvents() {\r\n        this.d.slider.addEventListener('click', this.click);\r\n        this.d.wrSlides.addEventListener('touchstart', this.touchStart, {passive: true});\r\n        this.d.wrSlides.addEventListener('touchmove', this.touchMoove, {passive: true});\r\n        this.d.wrSlides.addEventListener('touchend', this.touchEnd, {passive: true});\r\n    }\r\n\r\n    click(e) {\r\n        if(e.target.closest('.slider__arrow-next')) {\r\n            this.d.moveNext();\r\n        }\r\n\r\n        if(e.target.closest('.slider__arrow-prev')) {\r\n            this.d.movePrev();\r\n        }\r\n\r\n        if(e.target.closest('.sl-prod__filter-type')) {\r\n            this.filter.setActive(\r\n                e.target.closest('.sl-prod__filter-type'),\r\n                this.d.renderingWithFilter.bind(this.d)\r\n            );\r\n        }\r\n\r\n        if(e.target.closest('.sl-prod__filter-reset')) {\r\n            this.filter.resetActive(\r\n                this.d.renderingWithFilter.bind(this.d)\r\n            );\r\n        }\r\n    }\r\n\r\n    touchStart(e) {\r\n        this.d.touchStart(e.changedTouches[0].clientX);\r\n    }\r\n\r\n    touchMoove(e) {\r\n        this.d.swipe(e.changedTouches[0].clientX);\r\n    }\r\n\r\n    touchEnd(e) {\r\n        this.d.touchEnd(e.changedTouches[0].clientX);\r\n    }\r\n} ","export default class RedrawSlСoffee {\r\n    constructor(slider, data) {\r\n        this.slider = slider;\r\n        this.data = data;\r\n\r\n        this.description = this.slider.querySelector('.sl-prod__text-about');\r\n        this.wrSlides = this.slider.querySelector('.sl-prod__wr-slides');\r\n        this.slides = this.slider.querySelector('.sl-prod__slides');\r\n        this.wrBigImg = this.slider.querySelector('.sl-prod__wr-big-img');\r\n        this.bigImg = this.wrBigImg.querySelector('img');\r\n        this.bigDescriptions = this.slider.querySelectorAll('.sl-prod__big-desc-card');\r\n\r\n        this.amountSlides = null;\r\n\r\n        this.filter = null;\r\n        this.activePack = null;\r\n\r\n        // количество видимых слайдов десктоп\r\n        this.amountShowDesc = 3;\r\n\r\n        this.timeFunc = 'ease-out';\r\n        this.duration = 0.7;\r\n        this.durationChangeTextInfo = this.duration;\r\n        this.durationHalf = this.duration / 2;\r\n\r\n        this.oldActiveSlide = null;\r\n        this.activeSlide = null;\r\n\r\n        this.swipeStart = null;\r\n        this.touchMoved = null;\r\n        this.relocated = false; // для смещения в prev, чтоб перетавить слайд один раз\r\n        this.currentOffset = null; // текущее смещение всего слайдера\r\n        this.startTimeStamp = null;\r\n        this.endTimeStamp = null;\r\n        \r\n        this.sizeOffset = null; // px\r\n\r\n        this.activeBigDesc = null;\r\n\r\n        this.block = false;\r\n    }\r\n\r\n    initSlider() { \r\n        // формируем слайды\r\n        this.data.forEach((item, index) => {\r\n            const el = this.createSlide(\r\n                item.img,\r\n                item.title,\r\n                item.packing,\r\n                item.link,\r\n                item.title\r\n                );\r\n\r\n            el.style.transition = `height ${this.duration}s ${this.timeFunc}, width ${this.duration}s ${this.timeFunc}`;\r\n\r\n            if(index === 0 && innerWidth > 961) {\r\n                el.classList.add('sl-prod__slide_active');\r\n\r\n                this.bigImg.src = item.img;\r\n                this.bigImg.classList.add(`sl-prod__big-img_${item.packing}`);\r\n                this.bigImg.alt = item.title;\r\n            }\r\n            el.dataset.id = item.id;\r\n\r\n            this.slides.append(el);\r\n        });\r\n\r\n        // Изначально слайды не видимы, показываем их\r\n        this.slides.classList.add('sl-prod__slides_visible');\r\n\r\n        // Запоминаем активный слайд\r\n        this.activeSlide = this.slides.children[0];\r\n\r\n        this.amountSlides = this.slides.children.length;\r\n\r\n        // задаем ширину контейнеру со слайдами во vw для десктоп\r\n        // в % для мобилки\r\n        this.setWidthSliderContainer(this.slides, this.wrSlides);\r\n\r\n        // Заполняем информацию о продукте\r\n        this.fillTextInfo();\r\n\r\n        // Определяем анимацию для большой картинки\r\n        this.bigImg.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n\r\n        // Определяем анимацию для блока с текстом, описанием товара\r\n        this.description.style.transition = `opacity ${this.durationHalf}s ${this.timeFunc}`;\r\n\r\n        // Определяем анимацию для блока со слайдами, описанием товара\r\n        this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n\r\n        \r\n        // Задаем анимацию всем карточкам с большим описанием\r\n        [...this.bigDescriptions].forEach(item => {\r\n            item.style.transition = `opacity ${this.duration}s ${this.timeFunc}`\r\n        })\r\n        // Активируем актуальную карточку с большим описанием\r\n        this.activeBigDesc = [...this.bigDescriptions].find(item => item.dataset.id === this.activeSlide.dataset.id);\r\n        this.activeBigDesc.classList.add('sl-prod__big-desc-card_active');\r\n    }\r\n\r\n    moveNext() {\r\n        // блокируем накликивание\r\n        if(this.block) return;\r\n        this.block = true;\r\n\r\n        // для десктопа\r\n        if(innerWidth > 961) {\r\n            // клонируем и подставляем первый слайд назад\r\n            const clone = this.activeSlide.cloneNode(true);\r\n            clone.classList.remove('sl-prod__slide_active');\r\n            this.slides.append(clone);\r\n\r\n            // устанавливаем анимацию\r\n            this.slides.style.transition = `transform ${this.duration}s ${this.timeFunc}`;\r\n\r\n            this.oldActiveSlide = this.activeSlide;\r\n            this.activeSlide = this.slides.children[1];\r\n            this.activeSlide.classList.add('sl-prod__slide_active');\r\n\r\n\r\n            setTimeout(() => {\r\n                // получаем ширину активного слайда vw и двигаем\r\n                const width = this.oldActiveSlide.offsetWidth;\r\n                const offset = (width + this.getGap()) / innerWidth * 100;\r\n                this.slides.style.transform = `translateX(-${offset}vw)`;\r\n            })\r\n\r\n            this.slides.addEventListener('transitionend', () => {\r\n                // убираем transform возвращаем opacity\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n                this.oldActiveSlide.remove();\r\n                this.slides.style.transform = ``;\r\n            }, {once: true});\r\n\r\n            // меняем большую картинку и описания товара\r\n            this.changeBigImg(this.activeSlide);\r\n        }\r\n\r\n        // Для мобилки\r\n        if(innerWidth <= 961) {\r\n            const offset = this.slides.children[0].offsetWidth / innerWidth * 100;\r\n\r\n            // устанавливаем анимацию\r\n            this.slides.style.transition = `transform ${this.duration}s ${this.timeFunc}`;\r\n\r\n            // Меняем активный слайд\r\n            this.activeSlide = this.slides.children[1];\r\n\r\n            setTimeout(() => {\r\n                // Сдвигаем\r\n                this.slides.style.transform = `translateX(-${offset}vw)`;\r\n            })\r\n\r\n            this.slides.addEventListener('transitionend', () => {\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n                this.slides.append(this.slides.children[0]);\r\n                this.slides.style.transform = ``;\r\n            }, {once: true});\r\n        }\r\n\r\n        // Меняем описание\r\n        this.changeBigDescription(this.activeSlide);\r\n        this.changeTextInfo(this.activeSlide, this.data);\r\n        \r\n    }\r\n\r\n    movePrev() {\r\n        // блокируем накликивание\r\n        if(this.block) return;\r\n        this.block = true;\r\n\r\n        // Для десктопа\r\n        if(innerWidth > 961) {\r\n            // клонируем и подставляем первый слайд назад\r\n            console.log(this.slides.children.length)\r\n            const el = this.slides.children[this.slides.children.length - 1];\r\n            const clone = el.cloneNode(true);\r\n            clone.classList.add('sl-prod__slide_active');\r\n            this.slides.prepend(clone);\r\n\r\n            // получаем ширину активного слайда vw и\r\n            // ставим блок со слайдами в нужное стартовое положение\r\n            const width = this.activeSlide.offsetWidth;\r\n            const offset = (width + this.getGap()) / innerWidth * 100;\r\n            this.slides.style.transform = `translateX(-${offset}vw)`;\r\n\r\n            this.oldActiveSlide = this.activeSlide;\r\n            this.activeSlide = this.slides.children[0];\r\n            this.oldActiveSlide.classList.remove('sl-prod__slide_active');\r\n\r\n\r\n            setTimeout(() => {\r\n                // устанавливаем анимацию\r\n                this.slides.style.transition = `transform ${this.duration}s ${this.timeFunc}`;\r\n                // получаем ширину активного слайда vw и двигаем\r\n                this.slides.style.transform = ``; //translateX(-${offset}vw)\r\n            }, 5)\r\n\r\n            this.slides.addEventListener('transitionend', () => {\r\n                // убираем transform возвращаем opacity\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n                el.remove();\r\n                // this.slides.style.transform = ``;\r\n            }, {once: true});\r\n\r\n            // меняем большую картинку и описания товара\r\n            this.changeBigImg(this.activeSlide);\r\n        }\r\n\r\n        // Для мобилки\r\n        if(innerWidth <= 961) {\r\n            // ставим последний слайд в начало\r\n            const lastElement = this.slides.children[this.slides.children.length - 1];\r\n            this.slides.prepend(lastElement);\r\n            const offset = this.slides.children[0].offsetWidth / innerWidth * 100;\r\n\r\n            this.slides.style.transform = `translateX(-${offset}vw)`;\r\n\r\n            // Меняем активный слайд\r\n            this.activeSlide = this.slides.children[0];\r\n\r\n            setTimeout(() => {\r\n                // сдвигаем\r\n                this.slides.style.transition = `transform ${this.duration}s ${this.timeFunc}`;\r\n                this.slides.style.transform = ``;\r\n            }, 20)\r\n            \r\n            this.slides.addEventListener('transitionend', () => {\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n            }, {once: true});\r\n        }\r\n\r\n        // Меняем описание\r\n        this.changeBigDescription(this.activeSlide);\r\n        this.changeTextInfo(this.activeSlide, this.data);\r\n    }\r\n\r\n    // SWIPE START\r\n    touchStart(data) {\r\n        this.swipeStart = data;\r\n        // Размер слайда или максимальная ширина сдвига \r\n        this.getWidthOffset();\r\n        // Актуальный сдвиг\r\n        this.currentOffset = this.slides.getBoundingClientRect().x;\r\n\r\n        this.startTimeStamp = new Date().getTime();\r\n    }\r\n\r\n    swipe(p) {\r\n        if(this.block) return;\r\n\r\n        this.touchMoved = (this.swipeStart - p);\r\n\r\n        if(Math.abs(this.touchMoved) < 3) return;\r\n\r\n        // свайп в prev с необходимость перестановки слайда в начало\r\n        // для того чтоб слайд подставился только один раз при движении prev\r\n        if(!this.relocated && this.touchMoved < 0) {\r\n            this.slides.prepend(this.slides.children[this.slides.children.length - 1]);\r\n            this.slides.style.transform = `translateX(-${this.sizeOffset}px)`;\r\n            this.currentOffset = this.slides.getBoundingClientRect().x;\r\n            this.relocated = true;\r\n        }\r\n\r\n        this.slides.style.transform = `translateX(${this.currentOffset - this.touchMoved}px)`;\r\n    }\r\n\r\n    touchEnd(data) {\r\n        // блокируем накликивание\r\n        if(this.block) return;\r\n        this.block = true;\r\n\r\n        // сколько времени прошло между start и end\r\n        const timeDifference = new Date().getTime() - this.startTimeStamp;\r\n\r\n        // осталось до полной прокрутки\r\n        const r = this.sizeOffset - this.touchMoved;\r\n\r\n        // Вычисляем за какое время во время касания сдвигался один пиксель \r\n        // и умножаем это значение на количество оставшихся для сдвига пикселей\r\n        const durationOnePx = timeDifference / Math.abs(this.touchMoved);    \r\n        let durationRemained = (durationOnePx * r) / 1000;\r\n        durationRemained = durationRemained > 0.3 ? 0.3 : durationRemained;\r\n\r\n        // Установка анимаций\r\n        this.slides.style.transition = `\r\n            transform ${(durationRemained)}s ${this.timeFunc}\r\n        `;\r\n        // Корректируем время анимации смены текста описания под время свайпа слайда\r\n        this.durationChangeTextInfo = durationRemained;\r\n\r\n\r\n        //  ====== ----  если слайд был смещен не на много\r\n        if(Math.abs(this.touchMoved) <= this.sizeOffset / 3.5) {\r\n\r\n            // смещение устанавливаем в зависимости подставлен слайд в начало или нет\r\n            const offset = this.relocated ? this.sizeOffset * -1 : 0;\r\n                this.slides.style.transform = `\r\n                    translateX(${offset}px)\r\n                `;\r\n            \r\n            this.slides.addEventListener('transitionend', () => {\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n\r\n                // если уже был подставлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.slides.append(this.slides.children[0]);\r\n                    this.slides.style.transform = ``;\r\n                    this.relocated = false;\r\n                }\r\n\r\n                this.block = false\r\n            }, {once: true})\r\n\r\n            return;\r\n        }\r\n\r\n        //  ====== ----   to next\r\n        if(this.swipeStart > data) {  \r\n            // Обновляем насколько сдвинут блок со слайдами\r\n            this.currentOffset = this.slides.getBoundingClientRect().x;\r\n            \r\n            setTimeout(() => {\r\n                this.slides.style.transform = `translateX(-${Math.abs(this.currentOffset) + r}px)`;\r\n            },10)\r\n\r\n            // принцип работы слайдера такой что при next следующий активный \r\n            // слайд, пока не произошла перестановка всегда под индексом 1\r\n            this.activeSlide = this.slides.children[1];\r\n\r\n            this.slides.addEventListener('transitionend', () => {\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n                this.slides.append(this.slides.children[0]);\r\n                // если в процессе свайпа, сначала был свайп в prev и был добавлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.slides.append(this.slides.children[0]);\r\n                    this.relocated = false;\r\n                }\r\n\r\n                this.slides.style.transform = ``;\r\n            }, {once: true})\r\n        }\r\n\r\n        //  ====== ----   to prev\r\n        if(this.swipeStart < data) {          \r\n\r\n            this.slides.style.transform = ``;\r\n\r\n            this.activeSlide = this.slides.children[0];\r\n\r\n            this.slides.addEventListener('transitionend', () => {\r\n                this.slides.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n                // если в процессе свайпа, сначала был свайп в prev и был добавлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.relocated = false;\r\n                }\r\n            }, {once: true})\r\n        }\r\n\r\n        // Меняем описание\r\n        this.changeBigDescription(this.activeSlide);\r\n        this.changeTextInfo(this.activeSlide, this.data);\r\n    }\r\n\r\n    // SWIPE END\r\n\r\n\r\n    // Замена элементов при выборе фильтра\r\n    renderingWithFilter(pack) {\r\n        // если клик по тому же фильтру или фильтр не активен\r\n        if(this.activePack === pack || (!this.activePack && pack === 'reset')) return;\r\n\r\n        if(pack === 'reset') {\r\n            this.filter = this.data;\r\n            this.activePack = null;\r\n        } else {\r\n            this.filter = this.data.filter(item => item.packing === pack);\r\n            this.activePack = pack;\r\n        }\r\n\r\n        const ul = this.createEl('ul', ['sl-prod__slides']);\r\n        const left = parseFloat(getComputedStyle(this.wrSlides).paddingLeft);\r\n        const top = parseFloat(getComputedStyle(this.wrSlides).paddingTop);\r\n        ul.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n        ul.style.position = 'absolute';\r\n        ul.style.top = `${top}px`;\r\n        ul.style.left = `${left}px`;\r\n\r\n        this.filter.forEach((item, index) => {\r\n            const li = this.createSlide(item.img, item.title, item.packing, item.link, item.title);\r\n            li.style.transition = `height ${this.duration}s ${this.timeFunc}, width ${this.duration}s ${this.timeFunc}`;\r\n\r\n            if(index === 0 && innerWidth > 961) {\r\n                li.classList.add('sl-prod__slide_active');\r\n            }\r\n            li.dataset.id = item.id;\r\n\r\n            ul.append(li);\r\n        });\r\n\r\n        this.wrSlides.append(ul);\r\n\r\n        this.changeBigImg(ul.children[0]);\r\n        this.changeTextInfo(ul.children[0], this.filter);\r\n        this.changeBigDescription(ul.children[0]);\r\n\r\n        // для мобилки и десктопа разных подход к распределению ширин и элементов\r\n        // ообязательный метод\r\n        this.setWidthSliderContainer(ul, this.wrSlides)\r\n\r\n        setTimeout(() => {\r\n            this.slides.classList.remove('sl-prod__slides_visible');\r\n            ul.classList.add('sl-prod__slides_visible');\r\n        }, 10)\r\n        \r\n        this.slides.addEventListener('transitionend', () => {\r\n            this.slides.remove();\r\n\r\n            ul.style.position = '';\r\n            ul.style.top = '';\r\n            ul.style.left = '';\r\n\r\n            this.slides = ul;\r\n\r\n            // Запоминаем активный слайд\r\n            this.activeSlide = this.slides.children[0];\r\n\r\n            this.amountSlides = this.slides.children.length;\r\n        })\r\n    }\r\n\r\n    changeBigImg(activeSlide) { \r\n        const newImage = activeSlide.children[0].children[0];\r\n\r\n        // Определяем упаковку активного слайда\r\n        const pack = newImage.dataset.pack\r\n\r\n        // создаем новый элемент и создаем для него все необходимые параметры\r\n        const img = this.createEl('img', ['sl-prod__big-img', `sl-prod__big-img_${pack}`]);\r\n\r\n        img.style = `\r\n            position: absolute;\r\n            left: 0;\r\n            transition: opacity ${this.duration}s ${this.timeFunc};\r\n        `;\r\n\r\n        img.src = newImage.src; // указываем src для нового элемента\r\n\r\n        this.wrBigImg.prepend(img);\r\n\r\n        setTimeout(() => {\r\n            this.wrBigImg.children[0].classList.add('sl-prod__big-img_visible');\r\n            this.bigImg.classList.remove('sl-prod__big-img_visible');\r\n        });\r\n        \r\n        this.bigImg.addEventListener('transitionend', () => {\r\n            this.bigImg.remove();\r\n\r\n            this.bigImg = this.wrBigImg.children[0];\r\n\r\n            this.bigImg.style.position = '';\r\n            this.bigImg.style.left = '';    \r\n        }, {once: true})\r\n    }\r\n\r\n    changeTextInfo(activeSlide, data) {\r\n        const id = activeSlide.dataset.id;\r\n        const info = data.find( item => item.id === id);\r\n        const keys = Object.keys(info);\r\n        keys.forEach( item => {\r\n            const el = this.description.querySelector(`[data-type=\"${item}\"]`);\r\n            if(el) {\r\n                const newEl = this.createEl(el.localName, [el.className]);\r\n                newEl.dataset.type = el.dataset.type;\r\n                newEl.textContent = info[item];\r\n\r\n                newEl.style = `\r\n                    position: absolute;\r\n                    top: 0;\r\n                    ${el.dataset.type !== 'title' &&\r\n                    el.dataset.type !== 'taste' ? (\r\n                        `\r\n                        right: 0;`\r\n                    ) : el.dataset.type === 'taste' ? (\r\n                        `\r\n                        text-indent: ${\r\n                            el.parentElement.previousElementSibling.offsetWidth\r\n                        }px;\r\n                        left: 0;`\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                    opacity: 0;\r\n                    transition:\r\n                     opacity\r\n                     ${this.durationChangeTextInfo}s\r\n                     ${this.timeFunc}\r\n                    ;\r\n                `;\r\n\r\n                el.style = `transition: opacity ${this.durationChangeTextInfo}s ${this.timeFunc};`;\r\n\r\n                el.after(newEl);\r\n\r\n                setTimeout(() => {\r\n                    el.style.opacity = '0';\r\n                    newEl.style.opacity = '1';\r\n                }, 20)\r\n\r\n                el.addEventListener('transitionend', () => {\r\n                    el.remove();\r\n                    newEl.style = 'opacity: 1;';\r\n\r\n                    // Возвращаем сдантартное время смены текста (для клика)\r\n                    this.durationChangeTextInfo = this.duration;\r\n\r\n                    this.block = false;\r\n                }, {once: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    changeBigDescription(activeSlide) {\r\n        const id = activeSlide.dataset.id;\r\n        \r\n        if(id === this.activeBigDesc.dataset.id) return;\r\n\r\n        // Активируем карточку\r\n        const el = [...this.bigDescriptions].find(item => item.dataset.id === id);\r\n\r\n        el.classList.add('sl-prod__big-desc-card_active');\r\n        setTimeout(() => {\r\n            this.activeBigDesc.classList.remove('sl-prod__big-desc-card_active');\r\n        }, 5)\r\n        \r\n        this.activeBigDesc.addEventListener('transitionend', () => {\r\n            this.activeBigDesc = el;\r\n        }, {once: true})\r\n    }\r\n\r\n    fillTextInfo() {\r\n        const id = this.activeSlide.dataset.id;\r\n        const info = this.data.find( item => item.id === id);\r\n        const keys = Object.keys(info);\r\n        keys.forEach( item => {\r\n            const el = this.description.querySelector(`[data-type=\"${item}\"]`);\r\n            if(el) el.textContent = info[item]\r\n        })\r\n    } \r\n\r\n    // ширина обертки над слайдами (в которой слайды сдвигаются)\r\n    setWidthSliderContainer(slides, wrSlides) {\r\n        // для десктопа\r\n        if(innerWidth > 961) {\r\n            // задаем ширину контейнеру со слайдами во vw\r\n            let width = [...slides.children].reduce( (acc, item, index) => {\r\n                return index < this.amountShowDesc ? \r\n                (\r\n                    acc += item.offsetWidth / innerWidth * 100\r\n                ) : \r\n                (\r\n                    acc\r\n                );\r\n            }, 0);\r\n            width += ((this.getGap() * this.amountShowDesc) / innerWidth * 100);\r\n            wrSlides.style = `width: ${width.toFixed(3)}vw;`;\r\n        }\r\n        \r\n        // для мобилки\r\n        if(innerWidth <= 961 ) {\r\n            const widtsSlidesList = slides.children.length * 100;\r\n            slides.style.width = `${widtsSlidesList}%`;\r\n        }\r\n    }\r\n\r\n    createSlide(pathImg, title, packing, href, linkTitle) {\r\n        const li = this.createEl('li', ['sl-prod__slide']);\r\n\r\n        const divImg = this.createEl('div', ['sl-prod__wr-img-slide', `sl-prod__wr-img-slide_${packing}`]);\r\n        const img = this.createEl('img', ['sl-prod__img-slide']);\r\n        img.dataset.pack = packing;\r\n        img.src = pathImg;\r\n\r\n        \r\n        divImg.append(img);\r\n\r\n        const divTitle = this.createEl('div', ['sl-prod__wr-title-slide']);\r\n        const h3 = this.createEl('h3', ['sl-prod__title-slide']);\r\n        h3.textContent = title;\r\n        divTitle.append(h3);\r\n\r\n        const divButton = this.createEl('div', ['sl-prod__wr-button-slide']);\r\n        const link = this.createEl('a', ['sl-prod__button-slide']);\r\n        link.href = href;\r\n        link.title = linkTitle;\r\n        link.textContent = 'Заказать';\r\n        const linkDeco = this.createEl('div', ['sl-prod__wr-button-slide-deco']);\r\n        linkDeco.style.transition = `opacity ${this.duration}s ${this.timeFunc}`;\r\n        divButton.append(link);\r\n        divButton.append(linkDeco);\r\n\r\n        li.append(divImg);\r\n        li.append(divTitle);\r\n        li.append(divButton);\r\n\r\n        return li;\r\n    }\r\n\r\n    createEl(el, arrClassName) {\r\n        const element = document.createElement(el);\r\n\r\n        arrClassName.forEach(c => element.classList.add(c));\r\n        \r\n        return element;\r\n    }\r\n\r\n    getWidthOffset() {\r\n        this.sizeOffset = this.slides.children[0].offsetWidth;\r\n    }\r\n\r\n    getGap() {\r\n        return parseFloat(getComputedStyle(this.slides).gap);\r\n    }\r\n}","export default class Filter {\r\n    constructor(filter) {\r\n        this.filter = filter;\r\n\r\n        this.createEl = null;\r\n\r\n        this.currentActive = null;\r\n    }\r\n\r\n    initial(arr) {\r\n        this.rendering(arr);\r\n    }\r\n\r\n    // отрисовка кнопок фильтра, исходит из того какие упаковки есть\r\n    rendering(data) {\r\n        const arr = Array.from(data.entries());\r\n\r\n        for(let i = arr.length - 1 ; i >= 0; i -= 1) {\r\n            const li = document.createElement('li');\r\n            li.classList.add('sl-prod__filter-item');\r\n            li.classList.add('sl-prod__filter-type');\r\n            li.dataset.id = arr[i][0];\r\n            li.textContent = arr[i][1];\r\n    \r\n            this.filter.prepend(li);\r\n        }\r\n\r\n        if(innerWidth <= 961) {\r\n            this.filter.parentElement.parentElement.prepend(this.filter)\r\n        }\r\n    }\r\n\r\n    setActive(el, rendering) {\r\n        if(this.currentActive) {\r\n            this.currentActive.classList.remove('sl-prod__filter_active');\r\n        }\r\n\r\n        this.currentActive = el;\r\n        this.currentActive.classList.add('sl-prod__filter_active');\r\n\r\n        rendering(el.dataset.id);\r\n    }\r\n\r\n    resetActive(rendering) {\r\n        if(this.currentActive)\r\n            this.currentActive.classList.remove('sl-prod__filter_active');\r\n            \r\n        rendering('reset');\r\n    }\r\n}","export default class ControllSLP {\r\n    constructor(d) {\r\n        this.d = d;\r\n\r\n        this.click = this.click.bind(this);\r\n        this.touchMoove = this.touchMoove.bind(this);\r\n        this.touchStart = this.touchStart.bind(this);\r\n        this.touchEnd = this.touchEnd.bind(this);\r\n    }\r\n\r\n    init() {\r\n        this.d.initSlider();\r\n        this.registerEvents();\r\n    }\r\n \r\n    registerEvents() {\r\n        this.d.el.addEventListener('click', this.click);\r\n        this.d.itemsList.addEventListener('touchstart', this.touchStart, {passive: true});\r\n        this.d.itemsList.addEventListener('touchmove', this.touchMoove, {passive: true});\r\n        this.d.itemsList.addEventListener('touchend', this.touchEnd, {passive: true});\r\n    }\r\n\r\n    click(e) {\r\n        e.preventDefault();\r\n\r\n        if(e.target.closest('.slider__arrow-next')) {\r\n            this.d.next();\r\n        }\r\n\r\n        if(e.target.closest('.slider__arrow-prev')) {\r\n            this.d.prev();\r\n        }\r\n\r\n        if(e.target.closest('.sl-p__size-item')) {\r\n            this.d.choosingSize(e.target.closest('.sl-p__size-item'));\r\n        }\r\n\r\n        if(e.target.closest('.sl-p__card-slider-pag-item')) {\r\n            const el = e.target.closest('.sl-p__card-slider-pag-item');\r\n            const index = +el.dataset.num;\r\n            this.d.mooveCardSlider(index);\r\n        }\r\n\r\n        if(e.target.closest('.sl-p__card-slider-color-item')) {\r\n            const list = e.target.closest('.sl-p__card-slider-color-list');\r\n            const article = list.dataset.article\r\n            const el = e.target.closest('.sl-p__card-slider-color-item');\r\n            const id = el.id;\r\n            const color = el.dataset.color;\r\n            this.d.changeColor(id, color, article);\r\n        }\r\n    }\r\n\r\n    touchStart(e) {      \r\n        // свайп внешнего слайда  \r\n        if(!e.changedTouches[0].target.closest('.sl-p__card-wr-slider')) {\r\n            this.d.touchStart(e.changedTouches[0].clientX);\r\n        }\r\n        // свайп внутреннего слайда\r\n        if(e.changedTouches[0].target.closest('.sl-p__card-wr-slider') &&\r\n        !e.changedTouches[0].target.closest('.sl-p__card-slider-pag-list')) {\r\n            this.d.touchInSideCardStart(\r\n                e.changedTouches[0].clientX,\r\n                e.changedTouches[0].target.closest('.sl-p__card-slides-item')\r\n                );\r\n        }\r\n    }\r\n\r\n    touchMoove(e) {\r\n        // свайп внешнего слайда \r\n        if(!e.changedTouches[0].target.closest('.sl-p__card-wr-slider')) {\r\n            this.d.swipe(e.changedTouches[0].clientX);\r\n        }\r\n        // свайп внутреннего слайда\r\n        if(e.changedTouches[0].target.closest('.sl-p__card-wr-slider') &&\r\n        !e.changedTouches[0].target.closest('.sl-p__card-slider-pag-list')) {\r\n            this.d.inSideCardSwipe(e.changedTouches[0].clientX);\r\n        }        \r\n    }\r\n\r\n    touchEnd(e) {\r\n        // свайп внешнего слайда \r\n        if(!e.changedTouches[0].target.closest('.sl-p__card-wr-slider')) {\r\n            this.d.touchEnd(e.changedTouches[0].clientX);\r\n        }  \r\n        // свайп внутреннего слайда \r\n        if(e.changedTouches[0].target.closest('.sl-p__card-wr-slider') &&\r\n        !e.changedTouches[0].target.closest('.sl-p__card-slider-pag-list')) {\r\n            this.d.touchInSideCardEnd(e.changedTouches[0].clientX);\r\n        }\r\n    }\r\n}","export default class RedrawSLP {\r\n    constructor(el, data) {\r\n        this.el = el;\r\n        this.data = data;\r\n        this.arrows = this.el.querySelectorAll('.slider__arrow');\r\n        this.cardDecoL = this.el.querySelector('.sl-p__slide-item_l');\r\n        this.cardDecoR = this.el.querySelector('.sl-p__slide-item_r');\r\n        this.itemsList = null;\r\n     \r\n        this.items = null;\r\n        this.cards = null;\r\n\r\n        this.inSideSliders = this.el.querySelectorAll('.sl-p__card-wr-slider');\r\n\r\n        this.prevCard = null;\r\n        this.activeCard = null;\r\n        this.nextCard = null;\r\n\r\n        this.activeCardSlider = null; // слайдер внутри активной карточки (большой, основного слайда)\r\n        this.activeCardSlidesList = null;\r\n        this.activePaginationList = null;\r\n        this.activeColorPag = null;\r\n\r\n        this.activeSize = null;\r\n\r\n        this.duration = 0.5; \r\n        this.durationMobile = 0.3;\r\n        this.timeF = 'linear';\r\n        \r\n        // ==== ---Для мобилной версии // внешний слайдер\r\n        this.widthSlide = null; // ширина слайда\r\n        this.initOffsetVW = null; // стартовый сдвиг слайдов vw\r\n        this.gap = null;\r\n        this.sizeMobileOffset = null; // расчитанная велечина смещения при клике на стрелку\r\n        // => swipe внешний слайдер\r\n        this.swipeStart = null;\r\n        this.currentSwipe = null; // насколько уже сдвинут слайд когда touchend\r\n        this.currentOffset = null; // текущий сдвиг слайдов в моменте до touchend\r\n        this.startTimeStamp\r\n        this.durationSwipe = null; // расчитанное время свайпа когда косание окончено для завершения сдвига\r\n        this.touchMoved = null; // сдвиг блока со слайдами до touchend\r\n        this.relocated = false; // если true значит в начало блока подставлен слайд (false проставляется только по окончании свайпа в конце анимации)\r\n\r\n        //  => swipe внутренний слайдер\r\n        this.swipeCardStart = null;\r\n        this.currentCardOffset = null; // текущее положение списка слайдов, от которого будет происходить сдвиг и становиться на место\r\n        this.startTimeStampCard = null;\r\n        this.touchMovedCard = null;\r\n        this.relocatedCard = false;\r\n        this.widthCardSlide = null;\r\n        this.activeSwipeCardItem = null; // item на котором сработал touchstart (на котором стоит палец или стилус)\r\n\r\n        this.stoped = false;\r\n    }\r\n\r\n    // !!!!!!!! количество карточек для внешнего слайдера должно быть больше трех\r\n\r\n    // работает на основе абсолютного позиционирования\r\n    initSlider() {\r\n        // перебираем json и элементы вставляем this.cardDecoR.before(...)\r\n        // и там уже для элемента определяем все что в this.items.forEach(\r\n        // в конце initSlider определяем this.list и this.items\r\n\r\n        // Формируем карточки\r\n        this.data.forEach((item, index) => {\r\n            const el = this.patternCard(item);\r\n\r\n            if(innerWidth > 961) {\r\n                el.style.transition = `\r\n                left ${this.duration}s ${this.timeF},\r\n                transform ${this.duration}s ${this.timeF},\r\n                opacity  ${this.duration}s ${this.timeF}`;\r\n            }\r\n            \r\n            switch (index) {\r\n                case 0:\r\n                    this.prevCard = el;\r\n                    this.prevCard.classList.add('sl-p__slide-item_prev');\r\n                break;\r\n                case 1:\r\n                    this.activeCard = el;\r\n                    this.activeCard.classList.add('sl-p__slide-item_active');\r\n                break;\r\n                case 2:\r\n                    this.nextCard = el;\r\n                    this.nextCard.classList.add('sl-p__slide-item_next');\r\n            }\r\n\r\n            this.cardDecoR.before(el);\r\n\r\n        })\r\n\r\n        // заполняем переменные актуальной информацией\r\n        this.itemsList = this.el.querySelector('.sl-p__slides-list');\r\n        this.items = this.el.querySelectorAll('.sl-p__slide-item');\r\n\r\n        this.cards = this.el.querySelectorAll('.sl-p__card');\r\n\r\n        if(innerWidth > 961) {\r\n            this.cards.forEach((item, index) => {\r\n                // Добавляем анимацию активным карточкам внутри item\r\n                if(index < 3) {\r\n                    this.setTransitionCard(item);\r\n                }\r\n            })\r\n        }\r\n\r\n        \r\n        \r\n        // показываем стрелки\r\n        this.arrows.forEach(item => {\r\n            item.style.display = 'block';\r\n        });\r\n\r\n        // находим список размеров и определяем активный\r\n        this.findActiveSize();\r\n\r\n        // определяем активный внутренний слайдер\r\n        this.findActiveCardSlider();\r\n\r\n        /**\r\n         * Сдвигаем слайды на стартовое значение\r\n         * чтобы боковые были видны только частично\r\n        **/ \r\n        if(innerWidth <= 961) {\r\n            // ---------========  Внешний слайдер\r\n            this.gap = parseFloat(getComputedStyle(this.itemsList).gap);\r\n\r\n            const sumGap = this.gap * 2;\r\n            \r\n            this.widthSlide = this.items[0].offsetWidth;\r\n    \r\n            this.initOffset = this.widthSlide - ((innerWidth - sumGap - this.widthSlide) / 2);\r\n            this.initOffsetVW = this.initOffset / innerWidth * 100 * -1;\r\n\r\n            this.itemsList.style.transform = `translateX(${this.initOffsetVW}vw)`;\r\n\r\n            // Переводим значения во vw\r\n            // this.gap = this.gap / innerWidth * 100;\r\n            // this.widthSlide = this.widthSlide / innerWidth * 100;\r\n            \r\n            // Расчитываем размер смещения (при инициализации)\r\n            // в мобильной версии браузер не масштабируется  \r\n            this.sizeMobileOffset = this.widthSlide + this.gap + Math.abs(this.initOffset);\r\n\r\n            // Удаляем ненужные (декоративные) элементы из DOM\r\n            this.itemsList.children[0].remove();\r\n            this.itemsList.children[this.itemsList.children.length - 1].remove();\r\n\r\n            // -------------=========== Внутренний слайдер\r\n            \r\n            // ширина карточки внутреннего слайдера \r\n            this.widthCardSlide = this.activeCardSlidesList.children[0].offsetWidth;\r\n        }\r\n    }\r\n\r\n    // !!!!! ****  ДЕРГАЕТСЯ В МОБИЛКЕ ЕСЛИ КЛИК ПРОИЗОШЕЛ ДО ОКОНЧАНИЯ АНИМАЦИИ\r\n\r\n    next() {\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        // МОБИЛЬНАЯ ВЕРСИЯ\r\n        if(innerWidth <= 961) {\r\n            \r\n            this.itemsList.style.transition = `transform ${this.durationMobile}s ${this.timeF}`;\r\n\r\n            this.itemsList.style.transform = `translateX(${this.sizeMobileOffset * -1}px)`;\r\n\r\n            setTimeout(() => {                \r\n                    this.itemsList.style.transition = ``;\r\n    \r\n                    const firstEl = this.itemsList.children[0];\r\n                    this.itemsList.append(firstEl);\r\n    \r\n                    this.itemsList.style.transform = `translateX(${this.initOffsetVW}vw)`;\r\n    \r\n                    /** DOM меняется в мобильной версии **/ \r\n                    this.changeActiveClassMob();\r\n    \r\n                    // сбрасываем слайдер в карточке на ноль\r\n                    this.mooveCardSlider(0);\r\n    \r\n                    // переопределяем активный блок с размерами\r\n                    this.findActiveSize();\r\n                    // переопределяем активный внутренний слайдер\r\n                    this.findActiveCardSlider();\r\n                    \r\n                    this.stoped = false;\r\n            }, this.durationMobile * 1000 + 50);\r\n        }\r\n\r\n        // ДЕСКТОПНАЯ ВЕРСИЯ\r\n        if(innerWidth > 961) {\r\n            // находим следующий элемент определяем его положение\r\n            // добавляем анимацию и перемещаем\r\n            const nextEl = this.nextCard.nextElementSibling;\r\n            nextEl.classList.add('sl-p__slide-item_next-r');\r\n            setTimeout(() => {\r\n                this.setTransitionCard(nextEl.firstElementChild);\r\n                nextEl.classList.remove('sl-p__slide-item_next-r');\r\n                nextEl.classList.add('sl-p__slide-item_next');\r\n            })\r\n\r\n            /**\r\n             *  Вместе со сменой классов, меняется положение карточек, так как\r\n             * карточки абсолбтно спозиционированы\r\n             * DOM при этом не меняется\r\n             *  **/ \r\n            // смещаем (меняем) next в актив\r\n            this.nextCard.classList.remove('sl-p__slide-item_next');\r\n            this.nextCard.classList.add('sl-p__slide-item_active');\r\n\r\n            // смещаем (меняем) active в prev\r\n            this.activeCard.classList.remove('sl-p__slide-item_active');\r\n            this.activeCard.classList.add('sl-p__slide-item_prev');\r\n\r\n            // смещаем (меняем) prev в prev-l\r\n            this.prevCard.classList.remove('sl-p__slide-item_prev');\r\n            this.prevCard.classList.add('sl-p__slide-item_prev-l');\r\n\r\n            // сбрасываем слайдер в карточке на ноль\r\n            this.mooveCardSlider(0);\r\n\r\n            nextEl.addEventListener('transitionend', () => {\r\n                this.prevCard.classList.remove('sl-p__slide-item_prev-l');\r\n                this.prevCard.firstElementChild.style.transition = '';\r\n                this.cardDecoR.before(this.prevCard);\r\n\r\n                this.prevCard = this.activeCard;\r\n                this.activeCard = this.nextCard;\r\n                this.nextCard = nextEl;\r\n\r\n                // переопределяем активный блок с размерами\r\n                this.findActiveSize();\r\n                // переопределяем активный внутренний слайдер\r\n                this.findActiveCardSlider();\r\n\r\n                this.stoped = false;\r\n            }, {once: true})\r\n        }\r\n    }\r\n\r\n    prev() {\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        // МОБИЛЬНАЯ ВЕРСИЯ\r\n        if(innerWidth <= 961) {\r\n            /**\r\n             * так как небольшая часть карточки видна, сначала переставляем\r\n             * крайнюю с конца карточку в начало\r\n             * **/ \r\n            const lastEl = this.itemsList.children[this.itemsList.children.length - 1];\r\n            this.itemsList.prepend(lastEl);\r\n\r\n            this.itemsList.style.transform = `translateX(${this.sizeMobileOffset * -1}px)`;\r\n\r\n            setTimeout(() => {\r\n                this.itemsList.style.transition = `transform ${this.durationMobile}s ${this.timeF}`;\r\n                this.itemsList.style.transform = `translateX(${this.initOffsetVW}vw)`;\r\n            }, 10)\r\n\r\n            setTimeout(() => {\r\n                this.itemsList.style.transition = ``;\r\n\r\n                /** DOM меняется в мобильной версии **/ \r\n                this.changeActiveClassMob();\r\n\r\n                // сбрасываем слайдер в карточке на ноль\r\n                this.mooveCardSlider(0);\r\n\r\n                // переопределяем активный блок с размерами\r\n                this.findActiveSize();\r\n                // переопределяем активный внутренний слайдер\r\n                this.findActiveCardSlider();\r\n                \r\n                this.stoped = false;\r\n            }, this.durationMobile * 1000 + 50);\r\n        }\r\n\r\n        // ДЕСКТОПНАЯ ВЕРСИЯ\r\n        if(innerWidth > 961) {\r\n            const prevEl = this.cardDecoR.previousElementSibling;\r\n            this.cardDecoL.after(prevEl);\r\n            prevEl.classList.add('sl-p__slide-item_prev-l');\r\n            setTimeout(() => {\r\n                this.setTransitionCard(prevEl.firstElementChild);\r\n                prevEl.classList.remove('sl-p__slide-item_prev-l');\r\n                prevEl.classList.add('sl-p__slide-item_prev');\r\n            })\r\n\r\n            // смещаем prev на active\r\n            this.prevCard.classList.remove('sl-p__slide-item_prev');\r\n            this.prevCard.classList.add('sl-p__slide-item_active');\r\n\r\n            // смещаем active в prev\r\n            this.activeCard.classList.remove('sl-p__slide-item_active');\r\n            this.activeCard.classList.add('sl-p__slide-item_next');\r\n\r\n            // смещаем next в активе\r\n            this.nextCard.classList.remove('sl-p__slide-item_next');\r\n            this.nextCard.classList.add('sl-p__slide-item_next-r');\r\n\r\n            // сбрасываем слайдер в карточке на ноль\r\n            this.mooveCardSlider(0);\r\n\r\n            prevEl.addEventListener('transitionend', () => {\r\n                this.nextCard.classList.remove('sl-p__slide-item_next-r');\r\n                this.nextCard.firstElementChild.style.transition = '';\r\n        \r\n                this.nextCard = this.activeCard;\r\n                this.activeCard = this.prevCard;\r\n                this.prevCard = prevEl;\r\n\r\n                // переопределяем активный блок с размерами\r\n                this.findActiveSize();\r\n                // переопределяем активный внутренний слайдер\r\n                this.findActiveCardSlider();\r\n                \r\n                this.stoped = false;\r\n            }, {once: true})\r\n        }\r\n    }\r\n\r\n    touchStart(data) {\r\n        this.swipeStart = data;\r\n\r\n        /**\r\n         * текущее значение на старте (будет нужно если движение)\r\n         * будет только next (если prev то значение будет переопределено) \r\n         * **/ \r\n        this.currentOffset = this.itemsList.getBoundingClientRect().x;\r\n\r\n        this.startTimeStamp = new Date().getTime();\r\n    }\r\n\r\n    swipe(p) {\r\n        this.touchMoved = this.swipeStart - p;\r\n\r\n        if(Math.abs(this.touchMoved) < 3) return;\r\n\r\n        // свайп в prev с необходимость перестановки слайда в начало\r\n        // для того чтоб слайд подставился только один раз при движении prev\r\n        if(!this.relocated && this.touchMoved < 0) {\r\n\r\n            const el = this.itemsList.children[this.itemsList.children.length - 1];\r\n            this.itemsList.prepend(el);\r\n\r\n            this.itemsList.style.transform = `translateX(${this.sizeMobileOffset * -1}px)`;\r\n\r\n            // так как был переставлен элемент обновляем значение\r\n            this.currentOffset = this.itemsList.getBoundingClientRect().x;\r\n\r\n            this.relocated = true;\r\n\r\n        }\r\n\r\n        // расчет от первоначального положения минус насколько сдвинули\r\n        this.itemsList.style.transform = `\r\n            translateX(${this.currentOffset - this.touchMoved}px)\r\n        `;\r\n    }\r\n\r\n    touchEnd(data) {\r\n        if(Math.abs(this.touchMoved) < 3) return;\r\n\r\n        // блокируем накликивание\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        // сколько времени прошло между start и end\r\n        const timeDifference = new Date().getTime() - this.startTimeStamp;\r\n\r\n        // осталось до полной прокрутки\r\n        const r = this.sizeMobileOffset - this.touchMoved;\r\n\r\n        // Вычисляем за какое время во время касания сдвигался один пиксель \r\n        // и умножаем это значение на количество оставшихся для сдвига пикселей\r\n        const durationOnePx = timeDifference / Math.abs(this.touchMoved);    \r\n        let durationRemained = (durationOnePx * r) / 1000;\r\n        durationRemained = durationRemained > 0.3 ? 0.3 : durationRemained;\r\n\r\n        // Установка анимаций \r\n        this.itemsList.style.transition = `\r\n            transform ${durationRemained}s ${this.timeF}\r\n        `;\r\n        \r\n\r\n        //  ====== ----  если слайд был смещен не на много\r\n        if(Math.abs(this.touchMoved) <= this.widthSlide / 3.5) {\r\n\r\n            // смещение устанавливаем в зависимости подставлен слайд в начало или нет\r\n            const offset = this.relocated ? this.sizeMobileOffset * -1 : this.initOffset * -1;\r\n            this.itemsList.style.transform = `\r\n                    translateX(${offset}px)\r\n                `;\r\n            \r\n            this.itemsList.addEventListener('transitionend', () => {\r\n                this.itemsList.style.transition = '';\r\n\r\n                // если уже был подставлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.itemsList.append(this.itemsList.children[0]);\r\n                    this.itemsList.style.transform = `translateX(${this.initOffset * -1}px)`;\r\n                    this.relocated = false;\r\n                }\r\n\r\n                this.touchMoved = null;\r\n                this.stoped = false;\r\n            }, {once: true})\r\n\r\n            return;\r\n        }\r\n\r\n\r\n        //  ====== ----  swipe to next\r\n        if(this.swipeStart > data) {  \r\n\r\n            this.itemsList.style.transform = `translateX(${this.sizeMobileOffset * -1}px)`;\r\n\r\n            this.itemsList.addEventListener('transitionend', () => {\r\n                this.itemsList.style.transition = ``;\r\n\r\n                this.itemsList.append(this.itemsList.children[0]);\r\n                // если в процессе свайпа, сначала был свайп в prev\r\n                // и только потом в next и был добавлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.itemsList.append(this.slides.children[0]);\r\n                    this.relocated = false;\r\n                }\r\n\r\n                this.itemsList.style.transform = `translateX(${this.initOffset * -1}px)`; \r\n\r\n                // переставляем классы prev active next\r\n                this.changeActiveClassMob();\r\n\r\n                // сбрасываем слайдер в карточке на ноль\r\n                this.mooveCardSlider(0);\r\n\r\n                // переопределяем активный блок с размерами\r\n                this.findActiveSize();\r\n                // переопределяем активный внутренний слайдер\r\n                this.findActiveCardSlider();\r\n                \r\n                this.touchMoved = null;\r\n                this.stoped = false;\r\n\r\n            }, {once: true})\r\n        }\r\n\r\n        //  ====== ----  swipe to prev\r\n        if(this.swipeStart < data) {          \r\n            this.itemsList.style.transform = `translateX(${this.initOffset * -1}px)`;\r\n\r\n            this.itemsList.addEventListener('transitionend', () => {\r\n                this.itemsList.style.transition = ``;\r\n                // если в процессе свайпа, сначала был свайп в prev и был добавлен элемент в начало\r\n                if(this.relocated) {\r\n                    this.relocated = false;\r\n                }\r\n\r\n                // переставляем классы prev active next\r\n                this.changeActiveClassMob();\r\n\r\n                // сбрасываем слайдер в карточке на ноль\r\n                this.mooveCardSlider(0);\r\n\r\n                // переопределяем активный блок с размерами\r\n                this.findActiveSize();\r\n                // переопределяем активный внутренний слайдер\r\n                this.findActiveCardSlider();\r\n                \r\n                this.touchMoved = null;\r\n                this.stoped = false;\r\n\r\n            }, {once: true})\r\n        }\r\n    }\r\n\r\n\r\n    // START Свайп для слайдера внутри большого слайда\r\n    /**\r\n     * Здесь немного ДРУГОЙ ПРИНЦИП РАБОТЫ \r\n     * Элемент переставляется на стадии свайпа до touchend\r\n     * это на случай если 2 слайда, в touchend просто будем offset\r\n     * возвращать на нулевое положение\r\n     * **/ \r\n\r\n    touchInSideCardStart(data, activeItem) {\r\n        this.swipeCardStart = data;\r\n\r\n        /**\r\n         * текущее значение на старте (будет нужно если движение)\r\n         * будет только next (если prev то значение будет переопределено в inSideCardSwipe) \r\n         * **/ \r\n        this.currentCardOffset = 0;\r\n\r\n        this.startTimeStampCard = new Date().getTime();\r\n\r\n        this.activeCardSlidesList.style.transition = ``;\r\n\r\n        // определяем карточку на которой произошло касание\r\n        this.activeSwipeCardItem = activeItem;\r\n    }\r\n\r\n    \r\n    inSideCardSwipe(p) {\r\n        this.touchMovedCard = this.swipeCardStart - p;\r\n\r\n        if(Math.abs(this.touchMovedCard) < 3) return;\r\n\r\n        // если был prev элемент подставился, а потом вернулись к next\r\n        // вкрнуть подставленый элемент обратно\r\n        if(this.touchMovedCard <= 3 && this.touchMovedCard >= -3) {\r\n            if(this.activeSwipeCardItem.previousElementSibling) {\r\n                const el = this.activeCardSlidesList.children[0];\r\n                this.activeCardSlidesList.append(el);\r\n\r\n                this.currentCardOffset = 0;\r\n                this.activeCardSlidesList.style.transform = `translateX(${this.currentCardOffset}px)`;\r\n                \r\n                // в стартовое положение\r\n                this.relocatedCard = false;\r\n            }\r\n        }\r\n\r\n        // свайп в prev с необходимость перестановки слайда в начало\r\n        // для того чтоб слайд подставился только один раз при движении prev\r\n        if((!this.relocatedCard) && this.touchMovedCard < -3) {\r\n            const relocateElIndex = this.activeCardSlidesList.children.length - 1\r\n            const el = this.activeCardSlidesList.children[relocateElIndex];\r\n            this.activeCardSlidesList.prepend(el);\r\n\r\n            // так как был переставлен элемент обновляем значение\r\n            this.currentCardOffset = this.widthCardSlide * -1;\r\n            this.activeCardSlidesList.style.transform = `translateX(${this.currentCardOffset}px)`;\r\n\r\n            this.relocatedCard = true;\r\n        }\r\n  \r\n\r\n        // расчет от первоначального положения минус насколько сдвинули\r\n        this.activeCardSlidesList.style.transform = `\r\n            translateX(${this.currentCardOffset - this.touchMovedCard}px)\r\n        `;\r\n    }\r\n\r\n    touchInSideCardEnd(data) {\r\n        if(this.stoped) return;\r\n        this.stoped = true;\r\n\r\n        // сколько времени прошло между start и end\r\n        const timeDifference = new Date().getTime() - this.startTimeStampCard;\r\n\r\n        // осталось до полной прокрутки\r\n        const r = this.widthCardSlide - this.touchMovedCard;\r\n\r\n        // Вычисляем за какое время во время касания сдвигался один пиксель \r\n        // и умножаем это значение на количество оставшихся для сдвига пикселей\r\n        const durationOnePx = timeDifference / Math.abs(this.touchMovedCard);    \r\n        let durationRemained = (durationOnePx * r) / 1000;\r\n        durationRemained = durationRemained > 0.3 ? 0.3 : durationRemained;\r\n\r\n        // Установка анимаций// ${durationRemained}\r\n        this.activeCardSlidesList.style.transition = `\r\n            transform ${durationRemained}s ${this.timeF} \r\n        `;\r\n\r\n\r\n        //  ====== ----  если слайд был смещен не на много\r\n        if(Math.abs(this.touchMovedCard) <= this.widthCardSlide / 3.5) {\r\n            // смещение устанавливаем в зависимости подставлен слайд в начало или нет\r\n            this.activeCardSlidesList.style.transform = `\r\n                translateX(${this.currentCardOffset}px)\r\n            `;\r\n            \r\n            this.activeCardSlidesList.addEventListener('transitionend', () => {\r\n                // если в конце анимации подставлен элемент в начало\r\n                if(Math.abs(this.currentCardOffset) > 0) {\r\n                    this.activeCardSlidesList.style.transition = ``;\r\n\r\n                    const firstEl = this.activeCardSlidesList.children[0];\r\n                    this.activeCardSlidesList.append(firstEl);\r\n\r\n                    this.activeCardSlidesList.style.transform = ``;\r\n\r\n                    this.relocatedCard = false;\r\n                }\r\n\r\n                // Возвращаем transition в стартовое состояние\r\n                setTimeout(() => {\r\n                    this.activeCardSlidesList.style.transition = `\r\n                        transform ${this.durationMobile}s ${this.timeF} \r\n                    `;\r\n                })\r\n\r\n                this.touchMovedCard = null;\r\n                this.stoped = false;\r\n            }, {once: true})\r\n\r\n            // Если движения слайда не было то transitionend не сработает\r\n            // поэтому устанавливаем this.stoped = false здесь\r\n            if(this.touchMovedCard === null) {\r\n                this.stoped = false;\r\n            }\r\n\r\n            // чтоб облегчить работу компилятору и он дальше не смотрел\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        //  ====== ----   to next\r\n        if(this.swipeCardStart > data) {  \r\n\r\n            const value = `translateX(${this.widthCardSlide * -1}px)`;\r\n            this.activeCardSlidesList.style.transform = value;\r\n\r\n            this.activeCardSlidesList.addEventListener('transitionend', () => {\r\n                this.activeCardSlidesList.style.transition = ``;\r\n\r\n                const el = this.activeCardSlidesList.children[0];\r\n                this.activeCardSlidesList.append(el);\r\n\r\n                this.activeCardSlidesList.style.transform = ``;\r\n\r\n                const activeslide = this.activeCardSlidesList.children[0];\r\n                this.changeActivePagination(activeslide.dataset.num);\r\n                \r\n                this.touchMovedCard = null;\r\n                this.stoped = false;\r\n\r\n                // Возвращаем transition в стартовое состояние\r\n                setTimeout(() => {\r\n                    this.activeCardSlidesList.style.transition = `\r\n                        transform ${this.durationMobile}s ${this.timeF} \r\n                    `;\r\n                })\r\n            }, {once: true})\r\n        }\r\n\r\n        //  ====== ----   to prev\r\n        if(this.swipeCardStart < data) {          \r\n            this.activeCardSlidesList.style.transform = ``;\r\n\r\n            this.activeCardSlidesList.addEventListener('transitionend', () => {\r\n\r\n                const activeslide = this.activeCardSlidesList.children[0];\r\n                this.changeActivePagination(activeslide.dataset.num);\r\n\r\n                this.relocatedCard = false;\r\n                this.stoped = false;\r\n                this.touchMovedCard = null;\r\n\r\n                // Возвращаем transition в стартовое состояние\r\n                setTimeout(() => {\r\n                    this.activeCardSlidesList.style.transition = `\r\n                        transform ${this.durationMobile}s ${this.timeF} \r\n                    `;\r\n                })\r\n            }, {once: true})\r\n        }\r\n    }\r\n\r\n    // END Свайп для слайдера внутри большого слайда\r\n\r\n\r\n\r\n    /**\r\n     * Двигает слайды во внутреннем слайдере\r\n     * **/ \r\n    mooveCardSlider(index) {\r\n            const widthSlide = this.activeCardSlidesList.children[0].offsetWidth;\r\n            this.activeCardSlidesList.style.transform = `\r\n                translateX(-${(widthSlide / innerWidth * 100) * index}vw)\r\n            `;\r\n\r\n        this.changeActivePagination(index);\r\n    }\r\n\r\n    changeActivePagination(index) {\r\n        const lastActivePag = this.activePaginationList.querySelector('.sl-p__card-slider-pag-item_active');\r\n        lastActivePag.classList.remove('sl-p__card-slider-pag-item_active');\r\n        const newActivePag = this.activePaginationList.querySelector(`[data-num=\"${index}\"]`);\r\n        newActivePag.classList.add('sl-p__card-slider-pag-item_active');\r\n    }\r\n\r\n    /**\r\n     * выбор цвета мерсча или акса\r\n     * **/ \r\n    changeColor(id, color, article) {\r\n        // меняем активный кружок\r\n        const lastActivePag = this.activeColorPag.querySelector('.sl-p__card-slider-color-item_active');\r\n        lastActivePag.classList.remove('sl-p__card-slider-color-item_active');\r\n        const newActivePag = this.activeColorPag.querySelector(`#${id}`);\r\n        \r\n        newActivePag.classList.add('sl-p__card-slider-color-item_active');\r\n\r\n        // меняем цвет мерча\r\n        const images = this.activeCardSlidesList.querySelectorAll('img');\r\n        const data = this.data.find(item => item.article === article);\r\n\r\n        // картинка исчезает\r\n        this.activeCardSlidesList.style.opacity = '0';\r\n\r\n        // убираем transform чтоб возврат к первому слайду\r\n        // произошел без анимации\r\n        this.activeCardSlidesList.style.transition = '';\r\n\r\n        // когда картинка исчезла сдвигаем слайдер в начало\r\n        if(innerWidth > 961) {\r\n            this.mooveCardSlider(0);\r\n        } else {\r\n            this.changeActivePagination(0);\r\n        }\r\n        \r\n        // показываем картинку\r\n        this.activeCardSlidesList.style.opacity = '1';\r\n        // подменяем картинки и переставляем индексы (индексы для пагинации)\r\n        [...images].forEach( (item, i) => {\r\n            item.src = `${data[color].img[i]}`;\r\n\r\n            item.parentElement.dataset.num = i;\r\n            /**\r\n             * таким образом мы не переставляем сами li, но меняем в них картинки и num\r\n             * и получается что слайдер стоит на старте, как будто только что создан\r\n             * **/\r\n        })\r\n        // возвращаем всю анимацию\r\n        setTimeout(() => {\r\n            this.activeCardSlidesList.style.transition = `\r\n                transform ${this.duration}s ${this.timeF}\r\n            `;\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * выбор размера\r\n     * **/ \r\n    choosingSize(el) {\r\n        this.activeSize.classList.remove('sl-p__size-item_active');\r\n        this.activeSize = el;\r\n        this.activeSize.classList.add('sl-p__size-item_active');\r\n    }\r\n\r\n    /**\r\n     * Создание одного элемента\r\n     * **/ \r\n    createEl(el, className) {\r\n        const element = document.createElement(el);\r\n        className ? element.classList.add(className) : '';\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Присвоение transition переданному элементу\r\n     * transform, height, width, box-shadow\r\n     * **/\r\n    setTransitionCard(el) {\r\n        el.style.transition = `\r\n        transform ${this.duration}s ${this.timeF},\r\n        height ${this.duration}s ${this.timeF},\r\n        width ${this.duration}s ${this.timeF},\r\n        box-shadow ${this.duration}s ${this.timeF}`;\r\n    }\r\n\r\n    /**\r\n     * Определяет блок выбора размера, который сейчас активен\r\n     * **/ \r\n    findActiveSize() {\r\n        this.activeSize = this.el\r\n        .querySelector('.sl-p__slide-item_active .sl-p__size-item_active');\r\n    }\r\n\r\n    /**\r\n     * определяем активный ВНУТРЕННИЙ слайдер и его элементы\r\n     * **/ \r\n    findActiveCardSlider() {\r\n        this.activeCardSlider = this.activeCard.querySelector('.sl-p__card-wr-slider');\r\n        this.activeCardSlidesList = this.activeCardSlider.querySelector('.sl-p__card-slides-list');;\r\n        this.activePaginationList = this.activeCardSlider.querySelector('.sl-p__card-slider-pag-list');\r\n        this.activeColorPag = this.activeCardSlider.querySelector('.sl-p__card-slider-color-list');\r\n    }\r\n\r\n    /**\r\n     * Переопределяет классы prev active next для элементов в мобильной версии\r\n     * **/ \r\n    changeActiveClassMob() {\r\n        /** DOM меняется в мобильной версии **/ \r\n        // смещаем (меняем) prev в prev-l\r\n        this.prevCard.classList.remove('sl-p__slide-item_prev');\r\n        this.prevCard = this.itemsList.children[0];\r\n        this.prevCard.classList.add('sl-p__slide-item_prev');\r\n\r\n        // смещаем (меняем) active в prev\r\n        this.activeCard.classList.remove('sl-p__slide-item_active');\r\n        this.activeCard = this.itemsList.children[1];\r\n        this.activeCard.classList.add('sl-p__slide-item_active');\r\n\r\n        // смещаем (меняем) next в актив\r\n        this.nextCard.classList.remove('sl-p__slide-item_next');\r\n        this.nextCard = this.itemsList.children[2];\r\n        this.nextCard.classList.add('sl-p__slide-item_next');\r\n    }\r\n\r\n    /**\r\n     * Создает карточки\r\n     * **/ \r\n    patternCard(data) {\r\n        const item = this.createEl('li', 'sl-p__slide-item');\r\n\r\n        const card  = this.createEl('div', 'sl-p__card');\r\n\r\n        const price  = this.createEl('div', 'sl-p__card-price');\r\n        price.style.transition = `opacity ${this.duration}s ${this.timeF}`;\r\n        price.textContent = data.price;\r\n\r\n        const currency  = this.createEl('span', '');\r\n        currency.textContent = 'p.';\r\n        price.append(currency);\r\n\r\n        // слайдер внутри карточки\r\n        const wrInSlider  = this.createEl('div', 'sl-p__card-wr-slider');\r\n        if(innerWidth > 961) {\r\n            wrInSlider.style = `\r\n            transition: width ${this.duration}s ${this.timeF},\r\n                height ${this.duration}s ${this.timeF}\r\n            `;\r\n        }\r\n\r\n        const wrInSliderList  = this.createEl('div', 'sl-p__card-wr-slides');\r\n\r\n        const inSliderList  = this.createEl('ul', 'sl-p__card-slides-list');\r\n        inSliderList.style.transition = `\r\n            transform ${this.duration}s ${this.timeF}\r\n        `;\r\n        inSliderList.style.width = `${data.black.img.length * 100}%`;\r\n        data.black.img.forEach((item, index) => {\r\n            const inSliderItem  = this.createEl('li', 'sl-p__card-slides-item');\r\n            inSliderItem.dataset.num = index;\r\n            const inSliderImg  = this.createEl('img', 'sl-p__card-slides-img');\r\n            inSliderImg.src = item;\r\n\r\n            inSliderItem.append(inSliderImg);\r\n            inSliderList.append(inSliderItem);\r\n        });\r\n\r\n        const inSliderPaginationList  = this.createEl('ul', 'sl-p__card-slider-pag-list');\r\n        for(let i = 0; i < data.black.img.length; i += 1) {\r\n            const inSliderPaginationItem  = this.createEl('li', 'sl-p__card-slider-pag-item');\r\n            inSliderPaginationItem.dataset.num = i;\r\n            if(i === 0) \r\n                inSliderPaginationItem.classList.add('sl-p__card-slider-pag-item_active');\r\n            inSliderPaginationList.append(inSliderPaginationItem);\r\n        }\r\n        \r\n        const colorList  = this.createEl('ul', 'sl-p__card-slider-color-list');\r\n        colorList.dataset.article = data.article;\r\n        data.colors.forEach((item, index) => {\r\n            const colorItem  = this.createEl('li', 'sl-p__card-slider-color-item');\r\n            colorItem.id = `color${index}`; // для поиска и смены цвета кружочка\r\n            colorItem.dataset.color = item.name;\r\n            if(index === 0) \r\n                colorItem.classList.add('sl-p__card-slider-color-item_active');\r\n            colorItem.style.borderColor = `${item.value}`;\r\n            const colorItemInSideCircle  = this.createEl('div', 'sl-p__card-slider-color-circle');\r\n            colorItemInSideCircle.style = `background: ${item.value};`;\r\n\r\n            colorItem.append(colorItemInSideCircle);\r\n            colorList.append(colorItem);\r\n        })\r\n        \r\n        wrInSliderList.append(inSliderList);\r\n        wrInSlider.append(wrInSliderList);\r\n        wrInSlider.append(inSliderPaginationList);\r\n        wrInSlider.append(colorList);\r\n        // -- слайдер внутри карточки\r\n\r\n        const cardTitle  = this.createEl('div', 'sl-p__card-title');\r\n        cardTitle.textContent = data.title;\r\n\r\n        // все что находится под слайдером внутри карточки и исчезает\r\n        const wrCardContent  = this.createEl('div', 'sl-p__card-wr-content');\r\n        const cardContent  = this.createEl('div', 'sl-p__card-content');\r\n        const sizeList  = this.createEl('ul', 'sl-p__size-list');\r\n        data.black.sizes.forEach((item, index, arr) => {\r\n            const sizeItem  = this.createEl('li', 'sl-p__size-item');\r\n            \r\n            if(index === 0) sizeItem.classList.add('sl-p__size-item_active');\r\n\r\n            const sizeItemNum  = this.createEl('div', 'sl-p__size-item-num');\r\n            sizeItemNum.textContent = item;\r\n\r\n            sizeItem.append(sizeItemNum);\r\n            sizeList.append(sizeItem);\r\n        })\r\n\r\n        const composition  = this.createEl('p', '');\r\n\r\n        data.composition.forEach( item => {\r\n            const compositionItem  = this.createEl('span', '');\r\n            compositionItem.textContent = item;\r\n            composition.append(compositionItem);\r\n        } )\r\n        \r\n        const wrLink  = this.createEl('div', 'sl-p__card-wr-link');\r\n        if(data.composition.length > 1 && innerWidth > 961) \r\n            wrLink.style.marginTop = '0.5vw';\r\n        else if(data.composition.length > 1 && innerWidth <= 961)\r\n            wrLink.style.marginTop = '2.94vw';\r\n\r\n        const link  = this.createEl('a', 'sl-p__card-link');\r\n        link.textContent = 'Купить'\r\n        link.href = data.link;\r\n        link.alt = data.title;\r\n        link.target = '_blank';\r\n        wrLink.append(link);\r\n\r\n        cardContent.append(sizeList);\r\n        cardContent.append(composition);\r\n        cardContent.append(wrLink);\r\n        wrCardContent.append(cardContent);\r\n        // -- все что находится под слайдером внутри карточки и исчезает\r\n\r\n        const mask  = this.createEl('div', 'sl-p__card-mask');\r\n\r\n        \r\n        card.append(wrInSlider);\r\n        card.append(mask);\r\n        card.append(price); \r\n        card.append(cardTitle);\r\n        card.append(wrCardContent);\r\n        item.append(card)\r\n\r\n        return item;\r\n    }\r\n}\r\n","\r\n// Навигация\r\nimport ControllNav from \"./navigation/controllNavigation\";\r\nimport RedrawNav from \"./navigation/redrawNavigation\";\r\n\r\n// самый верхний слайдер с видео\r\nimport RedrawSlHead from \"./slider-head/redrawSlHead\";\r\nimport ControllSlHead from \"./slider-head/controllSlHead\";\r\n\r\n// кофейный слайдер\r\nimport ControllSlСoffee from \"./slider-coffee/controllSlСoffee\";\r\nimport RedrawSlСoffee from \"./slider-coffee/redrawSlСoffee\";\r\nimport Filter from \"./slider-coffee/filter\";\r\nimport sliderCoffeeData from \"../base/slider-coffee.json\"\r\n\r\n// слайдер с карточками в перспективе\r\nimport ControllSLP from \"./slider-perspective/controllSlP\";\r\nimport RedrawSLP from \"./slider-perspective/redrawSlP\";\r\nimport sliderMerchData from '../base/slider-merch.json';\r\nimport sliderAccessData from '../base/slider-accessories.json';\r\n\r\n// Кнопка прокрутки вверх\r\nimport buttonToTop from \"./button-to-top/button-to-top\";\r\n\r\nwindow.addEventListener('load', () => {\r\n    \r\n    // SLIDER HEAD\r\n    const sliderHead = document.querySelector('.slider-h');\r\n    if(sliderHead) {\r\n        const redrawSlHead = new RedrawSlHead(sliderHead);\r\n        const controllSlHead = new ControllSlHead(redrawSlHead);\r\n        controllSlHead.init();\r\n    }\r\n\r\n    // Кофейный слайдер\r\n    const sliderCoffe1 = document.querySelector('.coffee__wr-slider-top');\r\n\r\n    if(sliderCoffe1) {\r\n        const filterList = sliderCoffe1.querySelector('.sl-prod__filter-list');\r\n\r\n        const redrawSlCoffe = new RedrawSlСoffee(sliderCoffe1, sliderCoffeeData);\r\n        const filter = new Filter(filterList);\r\n        const controllSlCoffe = new ControllSlСoffee(redrawSlCoffe, filter);\r\n        controllSlCoffe.init();\r\n    }\r\n\r\n    \r\n    // слайдер Мерч с карточками в перспективе\r\n    const merchSL = document.querySelector('.merch__wr-slider .sl-p');\r\n    if(merchSL) {\r\n        const redrawSLP = new RedrawSLP(merchSL, sliderMerchData);\r\n        const controllSLP = new ControllSLP(redrawSLP);\r\n        controllSLP.init();\r\n    }\r\n\r\n    // слайдер Аксессуары с карточками в перспективе\r\n    const accessSL = document.querySelector('.accessories__wr-slider .sl-p');\r\n    if(accessSL) {\r\n        const redrawSLP = new RedrawSLP(accessSL, sliderAccessData);\r\n        const controllSLP = new ControllSLP(redrawSLP);\r\n        controllSLP.init();\r\n    }\r\n\r\n    // кнопка прокрутки вверх\r\n    const button = document.querySelector('.button-to-top');\r\n    if(button) buttonToTop(button);\r\n\r\n    // Навигация в хедере\r\n    const naviHeader = document.querySelector('.nav');\r\n    if(naviHeader) {\r\n        const redrawNav = new RedrawNav(naviHeader);\r\n        const controllNav = new ControllNav(redrawNav);\r\n        controllNav.init();\r\n    }\r\n\r\n    // Навигация в футуре\r\n    const naviFooter = document.querySelector('.footer nav');\r\n    if(naviFooter) {\r\n        const redrawNav = new RedrawNav(naviFooter);\r\n        const controllNav = new ControllNav(redrawNav);\r\n        controllNav.init();\r\n    }\r\n})\r\n","export default function buttonToTop(el) {\r\n    el.addEventListener('click', () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n    })\r\n}"],"names":["ControllNav","constructor","d","this","click","bind","init","registerEvents","initNav","el","addEventListener","e","preventDefault","target","closest","flag","dataset","item","scrolling","RedrawNav","itemsNav","querySelectorAll","itemsPoints","forEach","document","querySelector","push","find","matches","scrollIntoView","behavior","block","inline","RedrawSlHead","slider","slides","arrows","paginations","wrLine","videos","line","children","amountSlides","length","widthLine","timingFunc","duration","lineCounter","videoCounter","activeVideo","touchStart","touchEnd","stoped","initSlider","style","width","innerWidth","parentElement","offsetWidth","transition","v","i","play","pause","addListenerMovie","moveNext","controllMovie","type","currentTime","paused","changeVideoWithSwipe","transform","append","moveLineNext","movePrev","lastSlideIndex","prepend","setTimeout","moveLinePrev","clickPag","num","amount","unBlockClick","offset","div","createLine","newLine","remove","once","offsetDiv","createElement","classList","add","ControllSlHead","passive","targetTouches","clientX","changedTouches","filter","touchMoove","data","Map","set","packing","rendering","wrSlides","setActive","renderingWithFilter","resetActive","swipe","description","wrBigImg","bigImg","bigDescriptions","activePack","amountShowDesc","timeFunc","durationChangeTextInfo","durationHalf","oldActiveSlide","activeSlide","swipeStart","touchMoved","relocated","currentOffset","startTimeStamp","endTimeStamp","sizeOffset","activeBigDesc","index","createSlide","img","title","link","src","alt","id","setWidthSliderContainer","fillTextInfo","clone","cloneNode","getGap","changeBigImg","changeBigDescription","changeTextInfo","console","log","lastElement","getWidthOffset","getBoundingClientRect","x","Date","getTime","p","Math","abs","timeDifference","r","durationRemained","pack","ul","createEl","left","parseFloat","getComputedStyle","paddingLeft","top","paddingTop","position","li","newImage","info","Object","keys","newEl","localName","className","textContent","previousElementSibling","after","opacity","reduce","acc","toFixed","widtsSlidesList","pathImg","href","linkTitle","divImg","divTitle","h3","divButton","linkDeco","arrClassName","element","c","gap","Filter","currentActive","initial","arr","Array","from","entries","ControllSLP","itemsList","next","prev","choosingSize","mooveCardSlider","article","color","changeColor","touchInSideCardStart","inSideCardSwipe","touchInSideCardEnd","RedrawSLP","cardDecoL","cardDecoR","items","cards","inSideSliders","prevCard","activeCard","nextCard","activeCardSlider","activeCardSlidesList","activePaginationList","activeColorPag","activeSize","durationMobile","timeF","widthSlide","initOffsetVW","sizeMobileOffset","currentSwipe","durationSwipe","swipeCardStart","currentCardOffset","startTimeStampCard","touchMovedCard","relocatedCard","widthCardSlide","activeSwipeCardItem","patternCard","before","setTransitionCard","display","findActiveSize","findActiveCardSlider","sumGap","initOffset","firstEl","changeActiveClassMob","nextEl","nextElementSibling","firstElementChild","lastEl","prevEl","activeItem","relocateElIndex","value","activeslide","changeActivePagination","images","card","price","currency","wrInSlider","wrInSliderList","inSliderList","black","inSliderItem","inSliderImg","inSliderPaginationList","inSliderPaginationItem","colorList","colors","colorItem","name","borderColor","colorItemInSideCircle","cardTitle","wrCardContent","cardContent","sizeList","sizes","sizeItem","sizeItemNum","composition","compositionItem","wrLink","marginTop","mask","window","sliderHead","redrawSlHead","sliderCoffe1","filterList","redrawSlCoffe","merchSL","redrawSLP","accessSL","button","scrollTo","naviHeader","redrawNav","naviFooter"],"sourceRoot":""}